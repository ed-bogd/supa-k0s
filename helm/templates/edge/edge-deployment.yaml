{{- if .Values.functions.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.functions.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- toYaml .Values.commonLabels | nindent 4 }}
    app.kubernetes.io/component: edge-functions
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.functions.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.functions.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.functions.name }}
        {{- toYaml .Values.commonLabels | nindent 8 }}
        app.kubernetes.io/component: edge-functions
    spec:
      volumes:
      - name: functions-code
        configMap:
          name: functions-code
      containers:
      - name: functions
        image: "{{ .Values.functions.image.repository }}:{{ .Values.functions.image.tag }}"
        imagePullPolicy: {{ .Values.functions.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.functions.containerPort }}
          name: http
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: JWT_SECRET
        - name: SUPABASE_URL
          value: {{ .Values.functions.supabaseUrl | quote }}
        - name: SUPABASE_ANON_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: ANON_KEY
        - name: SUPABASE_SERVICE_ROLE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: SERVICE_ROLE_KEY
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: POSTGRES_PASSWORD
        - name: SUPABASE_DB_URL
          value: {{ tpl .Values.functions.database.url . | quote }}
        - name: VERIFY_JWT
          value: {{ .Values.functions.verifyJwt | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.functions.logLevel | quote }}
        args:
        {{- range .Values.functions.args }}
        - {{ . | quote }}
        {{- end }}
        volumeMounts:
        - name: functions-code
          mountPath: /home/deno/functions/main/index.ts
          subPath: index.ts
        {{- if .Values.functions.resources }}
        resources:
          {{- toYaml .Values.functions.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.functions.probes.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.functions.probes.path }}
            port: {{ .Values.functions.containerPort }}
          initialDelaySeconds: {{ .Values.functions.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.functions.probes.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.functions.probes.path }}
            port: {{ .Values.functions.containerPort }}
          initialDelaySeconds: {{ .Values.functions.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.functions.probes.readiness.periodSeconds }}
        {{- end }}
{{- end }}
