apiVersion: v1
kind: ConfigMap
metadata:
  name: db-migrations
  namespace: supabase
data:
  # 95-extensions-schema.sql: |
  #   -- Create extensions schema
  #   CREATE SCHEMA IF NOT EXISTS extensions;
  #   GRANT USAGE ON SCHEMA extensions TO postgres, anon, authenticated, service_role;

  # 96-extensions.sql: |
  #   -- Create necessary extensions
  #   CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA extensions;
  #   CREATE EXTENSION IF NOT EXISTS "pgcrypto" SCHEMA extensions;
  #   CREATE EXTENSION IF NOT EXISTS "pgjwt" SCHEMA extensions;

  # 99-realtime.sql: |
  #   \set pguser `echo "$POSTGRES_USER"`

  #   create schema if not exists _realtime;
  #   alter schema _realtime owner to :pguser;

  # 99-pooler.sql: |
  #   \set pguser `echo "$POSTGRES_USER"`

  #   \c _supabase
  #   create schema if not exists _supavisor;
  #   alter schema _supavisor owner to :pguser;
  #   \c postgres

  97-supabase.sql: |
    \set pguser `echo "$POSTGRES_USER"`

    CREATE DATABASE _supabase WITH OWNER :pguser;

  # 98-logs.sql: |
  #   \set pguser `echo "$POSTGRES_USER"`

  #   \c _supabase
  #   create schema if not exists _analytics;
  #   alter schema _analytics owner to :pguser;
  #   \c postgres

  # 99-realtime.sql: |
  #   \set pguser `echo "$POSTGRES_USER"`

  #   create schema if not exists _realtime;
  #   alter schema _realtime owner to :pguser;

  # 99-pooler.sql: |
  #   \set pguser `echo "$POSTGRES_USER"`

  #   \c _supabase
  #   create schema if not exists _supavisor;
  #   alter schema _supavisor owner to :pguser;
  #   \c postgres
