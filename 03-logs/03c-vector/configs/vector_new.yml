data_dir: /root

api:
  enabled: true
  address: 0.0.0.0:9001

sources:
  kubernetes_logs:
    type: kubernetes_logs
    extra_namespace_label_selector: kubernetes.io/metadata.name=supabase

transforms:
  project_logs:
    type: remap
    inputs:
      - kubernetes_logs
    source: |-
      .project = "default"
      .event_message = del(.message)
      # Extract app name from pod labels
      .appname = del(.kubernetes.pod_labels.app)
      if .appname == null {
        .appname = "unknown"
      }

      # if exists(.appname) && to_string!(.avppname) == "auth" {
      #   .appname = "auth_logs"
      # }

      # Clean up kubernetes metadata
      del(.source_type)
      del(.stream)
      del(.file)
      del(.kubernetes)
  router:
    type: route
    inputs:
      - project_logs
    route:
      kong: '.appname == "kong"'
      auth: '.appname == "auth"'
      rest: '.appname == "rest"'
      realtime: '.appname == "realtime"'
      storage: '.appname == "storage"'
      functions: '.appname == "functions"'
      db: '.appname == "postgres"'
  # Ignores non nginx errors since they are related with kong booting up
  # kong_logs:
  #   type: remap
  #   inputs:
  #     - router.kong
  #   source:


sinks:
  kong:
    type: 'file'
    inputs:
      - router.kong
    encoding:
      codec: 'json'
    path: /root/kong.log